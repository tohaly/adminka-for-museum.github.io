{"version":3,"sources":["firebase/firebase.ts","firebase/endpoints.ts","features/form/formSlice.tsx","features/news/newsSlice.ts","features/auth/authSlice.ts","firebase/withAuth.tsx","features/news/News/News.tsx","components/Loader/Loader.tsx","components/Title/Title.tsx","features/news/NewsList.tsx","features/form/Button/Button.tsx","features/form/Input/Input.tsx","features/form/InputFile/InputFile.tsx","features/form/TextArea/TextArea.tsx","features/form/Form.tsx","features/form/StatusMessage/StatusMessage.tsx","features/news/AddNews/useAddForm.ts","features/news/AddNews/AddNews.tsx","components/Header/AuthForm/AuthForm.tsx","components/Header/Header.tsx","components/NotFound/NotFound.tsx","components/App/App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["DOCUMENT_NAME","appApi","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","storageRef","storage","ref","loadNews","a","collection","get","docs","map","doc","data","id","loadSingleNewsAndGetId","add","docRef","loadImageAndGetUrl","file","fileRef","child","name","put","getDownloadURL","removeNewsFromServer","delete","updateDateOnServer","newDate","runTransaction","transaction","then","sfDoc","exists","update","date","authorize","email","password","auth","signInWithEmailAndPassword","clearUserData","signOut","form","createSlice","initialState","statusText","isError","pending","img","loadImagePending","reducers","formStartPending","state","formStopPending","setFormError","payload","setFormSuccess","setImage","clearStatusMessage","startLoadImagePending","console","log","stopLoadImagePending","actions","selectImageLink","selectStatusText","selectFormErrorStatus","selectPendingForm","selectLoadImagePending","news","list","error","getNewsListStart","getNewsListStop","getNewsListSuccess","push","setError","addNews","removeNews","filter","replaceNews","dateOne","dateTwo","loadNewsToServer","dispatch","setTimeout","loadImageToServe","imgUrl","changeDate","newsOne","newsTwo","selectNewsList","sort","b","selectPending","sleetErrorMessage","isAuth","formIsOpen","login","logout","startLogin","stopLogin","toggleForm","selectIsAuth","selectPendingAuth","selectFormVisible","withAuth","WrappedComponent","props","useSelector","NewsStyled","styled","li","Link","NewsImage","NewsTitle","h2","ControlButton","button","top","right","left","News","link","title","isLeft","isRight","useDispatch","getArrWithDateAndId","firstElement","secondElement","dataset","Number","data-id","data-date","onClick","event","preventDefault","parentClass","styledComponentId","target","closest","removeNewsHandler","disabled","elementOne","elementTwo","previousElementSibling","nextElementSibling","href","src","alt","spin","keyframes","LoaderWrapper","div","LoaderItem","Loader","TitleStyled","Info","Title","text","List","ul","NewsList","memo","newList","index","arr","length","AddButton","Button","isValidate","type","InputStyled","input","Input","onChange","value","placeholder","pattern","required","Text","p","HiddenInput","Label","label","image","InputFile","isPending","htmlFor","TextAreaStyled","textarea","TextArea","minLength","FormStyled","Form","onSubmit","children","noValidate","StatusMessageStyled","StatusMessage","useAddForm","useState","setValidate","values","setValues","imageLink","statusMessage","pendingImage","AddNews","fileChangeHandler","files","changeValuesHandler","submitHandler","Date","now","reset","currentTarget","checkValidity","load","LoadingStyled","AuthForm","loginUser","HeaderStyled","header","StyledLink","NavLink","StyledLinkBlank","AuthButton","NavigateBar","nav","Header","formIsVisible","to","rel","disaptch","NotFoundStyled","NotFound","App","useEffect","className","path","component","store","configureStore","reducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a0ac654e.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nexport const DOCUMENT_NAME = 'news';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBkvRnVoViqp6O8mbUHUIwMCQD9mQ8t9sE\",\n  authDomain: \"museum-for-everyone-admin.firebaseapp.com\",\n  projectId: \"museum-for-everyone-admin\",\n  storageBucket: \"museum-for-everyone-admin.appspot.com\",\n  messagingSenderId: \"177536945960\",\n  appId: \"1:177536945960:web:855688e332e1ff29de4a1d\"\n};\n\nconst appApi = firebase.initializeApp(firebaseConfig);\n\nexport default appApi\n","import appApi, { DOCUMENT_NAME } from \"./firebase\";\nimport firebase from \"firebase\";\nimport { login, logout } from \"../features/auth/authSlice\";\n\nexport interface INews {\n  date: number;\n  img: string;\n  link: string;\n  title: string;\n  id: string;\n}\n\nexport interface IAuthValues {\n  email: string;\n  password: string\n}\n\nconst db = appApi.firestore();\nconst storageRef = appApi.storage().ref();\n\nexport const loadNews = async (): Promise<INews[]> => {\n  const collection = await db.collection(DOCUMENT_NAME).get();\n  return collection.docs.map(doc => {\n    return { ...(doc.data() as INews), id: doc.id };\n  });\n};\n\nexport const loadSingleNewsAndGetId = async (data: Omit<INews, 'id'>) => {\n  const docRef = await db.collection(DOCUMENT_NAME).add(data);\n  return docRef.id;\n};\n\nexport const loadImageAndGetUrl = async (file: File): Promise<string> => {\n  const fileRef = storageRef.child(file.name);\n  await fileRef.put(file);\n  return fileRef.getDownloadURL();\n};\n\nexport const removeNewsFromServer = async (id: string) => {\n  await db.collection(DOCUMENT_NAME).doc(id).delete();\n};\n\nexport const updateDateOnServer = async (id: string, newDate: number) => {\n  const ref = await db.collection(DOCUMENT_NAME).doc(id);\n\n  return db.runTransaction(function (transaction) {\n    return transaction.get(ref).then(function (sfDoc) {\n      if (!sfDoc.exists) {\n        throw \"Document does not exist!\";\n      }\n      transaction.update(ref, { date: newDate });\n    });\n  });\n};\n\nexport const authorize = async ({ email, password }: IAuthValues) => {\n  await firebase.auth().signInWithEmailAndPassword(email, password);\n};\n\ntype checkAuthCallback = (user: firebase.User) => void\n\nexport const checkAuthorize = (callback: checkAuthCallback) => {\n  firebase.auth().onAuthStateChanged(callback);\n};\n\nexport const clearUserData = async () => {\n  await firebase.auth().signOut();\n};","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\n\ninterface IFormState {\n  statusText: string;\n  isError: boolean;\n  pending: boolean;\n  img: string\n  loadImagePending: boolean;\n}\n\nconst initialState: IFormState = {\n  statusText: '',\n  isError: false,\n  pending: false,\n  img: '',\n  loadImagePending: false,\n};\n\nconst form = createSlice({\n    name: 'form',\n    initialState,\n    reducers: {\n      formStartPending(state) {\n        state.pending = true;\n      },\n      formStopPending(state) {\n        state.pending = false;\n      },\n      setFormError(state, { payload }: PayloadAction<string>) {\n        state.isError = true;\n        state.statusText = payload;\n      },\n      setFormSuccess(state, { payload }: PayloadAction<string>) {\n        state.statusText = payload;\n        state.img = '';\n      },\n      setImage(state, { payload }: PayloadAction<string>) {\n        state.img = payload;\n      },\n      clearStatusMessage(state) {\n        state.isError = false;\n        state.statusText = '';\n      },\n      startLoadImagePending(state) {\n        console.log('kok')\n        state.loadImagePending = true;\n      },\n      stopLoadImagePending(state) {\n        state.loadImagePending = false;\n      },\n    },\n  },\n);\n\nexport default form.reducer;\n\nexport const {\n  formStartPending,\n  setFormError,\n  clearStatusMessage,\n  formStopPending,\n  setFormSuccess,\n  setImage,\n  startLoadImagePending,\n  stopLoadImagePending,\n} = form.actions;\n\nexport const selectImageLink = (state: RootState) => state.form.img;\nexport const selectStatusText = (state: RootState) => state.form.statusText;\nexport const selectFormErrorStatus = (state: RootState) => state.form.isError;\nexport const selectPendingForm = (state: RootState) => state.form.pending;\nexport const selectLoadImagePending = (state: RootState) => state.form.loadImagePending;","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  INews,\n  loadImageAndGetUrl,\n  loadNews,\n  loadSingleNewsAndGetId,\n  removeNewsFromServer,\n  updateDateOnServer,\n} from \"../../firebase/endpoints\";\nimport {\n  formStartPending,\n  formStopPending,\n  setFormError,\n  setFormSuccess,\n  setImage,\n  startLoadImagePending,\n  stopLoadImagePending,\n} from \"../form/formSlice\";\nimport { AppThunk, RootState } from \"../../app/store\";\n\ninterface INewsState {\n  list: INews[];\n  pending: boolean;\n  error: string;\n}\n\nconst initialState: INewsState = {\n  list: [],\n  pending: false,\n  error: '',\n\n};\n\nconst news = createSlice({\n  name: 'news',\n  initialState,\n  reducers: {\n    getNewsListStart(state) {\n      state.pending = true;\n    },\n    getNewsListStop(state) {\n      state.pending = false;\n    },\n    getNewsListSuccess(state, { payload }: PayloadAction<INews[]>) {\n      state.list.push(...payload);\n    },\n    setError(state, { payload }: PayloadAction<string>) {\n      state.error = payload;\n    },\n    addNews(state, { payload }: PayloadAction<INews>) {\n      state.list.push(payload);\n    },\n    removeNews(state, { payload }: PayloadAction<string>) {\n      state.list = state.list.filter(({ id }) => id !== payload);\n    },\n    replaceNews(state, { payload }) {\n      const { dateOne, dateTwo } = payload;\n\n      const news = state.list.map((news) => {\n        console.log(news.date, dateTwo);\n        if (news.date === dateOne) {\n          return {\n            ...news,\n            date: dateTwo,\n          };\n        }\n\n        if (news.date === dateTwo) {\n          return {\n            ...news,\n            date: dateOne,\n          };\n        }\n\n        return news;\n      });\n\n      console.log(news);\n      state.list = news;\n    },\n  },\n});\n\nexport const {\n  getNewsListStart,\n  getNewsListSuccess,\n  setError,\n  getNewsListStop,\n  addNews,\n  removeNews,\n  replaceNews,\n} = news.actions;\n\nexport const fetchNewsList = (): AppThunk => async dispatch => {\n  try {\n    dispatch(getNewsListStart());\n    const list = await loadNews();\n    dispatch(getNewsListSuccess(list));\n  } catch {\n    dispatch(setError('Ошибка загрузки новостей'));\n  } finally {\n    setTimeout(() => {\n      dispatch(getNewsListStop());\n    }, 2000);\n  }\n};\n\nexport const loadNewsToServer = (data: Omit<INews, 'id'>): AppThunk => async dispatch => {\n  try {\n    dispatch(formStartPending());\n    const id = await loadSingleNewsAndGetId(data);\n    dispatch(addNews({ ...data, id }));\n    dispatch(setFormSuccess('Новость успешно загружена'));\n  } catch {\n    dispatch(setFormError('Ошибка загрузки новости:('));\n  } finally {\n    setTimeout(() => {\n      dispatch(formStopPending());\n    }, 2000);\n  }\n};\n\nexport const loadImageToServe = (file: File): AppThunk => async dispatch => {\n  try {\n    dispatch(startLoadImagePending());\n    const imgUrl = await loadImageAndGetUrl(file);\n    dispatch(setImage(imgUrl));\n  } catch {\n    dispatch(setFormError('Ошибка загрузки картинки:('));\n  } finally {\n    dispatch(stopLoadImagePending());\n  }\n};\n\nexport const removeNewsHandler = (id: string): AppThunk => async dispatch => {\n  try {\n    await removeNewsFromServer(id);\n    dispatch(removeNews(id));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const changeDate = ([ newsOne, newsTwo ]: { id: string, date: number }[]): AppThunk => async dispatch => {\n  try {\n    await updateDateOnServer(newsOne.id, newsTwo.date);\n    await updateDateOnServer(newsTwo.id, newsOne.date);\n    dispatch(replaceNews({ dateOne: newsOne.date, dateTwo: newsTwo.date }));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const selectNewsList = (state: RootState) => {\n  const arr = [ ...state.news.list ];\n  return arr.sort((a, b) => b.date - a.date);\n};\nexport const selectPending = (state: RootState) => state.news.pending;\nexport const sleetErrorMessage = (state: RootState) => state.news.error;\n\nexport default news.reducer;","import { createSlice } from \"@reduxjs/toolkit\";\nimport { AppThunk, RootState } from \"../../app/store\";\nimport { authorize, checkAuthorize, IAuthValues, clearUserData } from \"../../firebase/endpoints\";\nimport firebase from \"firebase\";\n\ninterface IAuthState {\n  isAuth: boolean;\n  name: string;\n  pending: boolean;\n  formIsOpen: boolean;\n}\n\nconst initialState: IAuthState = {\n  isAuth: false,\n  name: 'Admin',\n  pending: false,\n  formIsOpen: false,\n};\n\nconst auth = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    login(state) {\n      state.isAuth = true;\n    },\n    logout(state) {\n      state.isAuth = false;\n    },\n    startLogin(state) {\n      state.pending = true;\n    },\n    stopLogin(state) {\n      state.pending = false;\n    },\n    toggleForm(state) {\n      state.formIsOpen = !state.formIsOpen;\n    },\n  },\n});\n\nexport default auth.reducer;\n\nexport const { login, logout, startLogin, stopLogin, toggleForm } = auth.actions;\n\nexport const loginUser = (values: IAuthValues): AppThunk => async dispatch => {\n  try {\n    dispatch(startLogin());\n    await authorize(values);\n    setTimeout(() => {\n      dispatch(login());\n      dispatch(toggleForm());\n    }, 1500);\n  } catch {\n    console.error(\"Ошибка авторизации\");\n  } finally {\n    setTimeout(() => {\n      dispatch(stopLogin());\n    }, 1900);\n  }\n};\n\nexport const checkUserAuthorize = (): AppThunk => async dispatch => {\n  try {\n    checkAuthorize((user: firebase.User) => {\n      if (user) {\n        dispatch(login());\n      } else {\n        dispatch(logout());\n      }\n    });\n  } catch (err) {\n    console.error(err);\n  }\n\n};\n\nexport const logoutUser = (): AppThunk => async disaptch => {\n  try {\n    await clearUserData();\n    disaptch(logout());\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const selectIsAuth = (state: RootState) => state.auth.isAuth;\nexport const selectPendingAuth = (state: RootState) => state.auth.pending;\nexport const selectFormVisible = (state: RootState) => state.auth.formIsOpen;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsAuth } from \"../features/auth/authSlice\";\n\ninterface IWithAuthProps {\n  isAuth: boolean;\n}\n\nexport const withAuth = <T extends IWithAuthProps>(WrappedComponent: React.ComponentType<T>) => {\n\n  return (props: Omit<T, keyof IWithAuthProps>) => {\n    const isAuth = useSelector(selectIsAuth);\n\n    return <WrappedComponent isAuth={ isAuth } { ...(props as T) } />;\n  };\n};\n;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { INews } from \"../../../firebase/endpoints\";\nimport { changeDate, removeNewsHandler, replaceNews } from \"../newsSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { withAuth } from \"../../../firebase/withAuth\";\n\ninterface IButtonStyleProps {\n  top: string;\n  right?: string;\n  left?: string;\n}\n\nconst NewsStyled = styled.li`\n  padding: 0;\n  width: 150px;\n  position: relative;\n  border: 2px solid #ae86ee;\n  border-radius: 8px;\n  overflow: hidden;\n`;\n\nconst Link = styled.a`\n  text-decoration: none;\n  display: block;\n`;\n\nconst NewsImage = styled.img`\n  width: 150px;\n  height: 150px;\n  object-fit: cover;\n  object-position: center;\n`;\n\nconst NewsTitle = styled.h2`\n  margin: 0;\n  font-size: 14px;\n  color: #000;\n  text-align: center;\n`;\n\nconst ControlButton = styled.button<IButtonStyleProps>`\n  position: absolute;\n  top: ${ ({ top }) => top || 'auto' };\n  right: ${ ({ right }) => right || 'auto' };\n  left: ${ ({ left }) => left || 'auto' };\n  text-align: center;\n  padding: 0;\n  width: 20px;\n  height: 20px;\n  border: none;\n  color: #fff;\n  background-color: #ae86ee;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: opacity .2s;\n\n  :hover {\n    opacity: .6;\n  }\n\n  :disabled {\n    cursor: default;\n    background-color: #c7c7c7;\n\n    :hover {\n      opacity: 1;\n    }\n  }\n`;\n\ntype Props = {\n  isLeft: boolean;\n  isRight: boolean;\n  isAuth: boolean;\n} & INews\n\nexport const News = withAuth(({ date, img, link, title, id, isLeft, isRight, isAuth }: Props) => {\n  const dispatch = useDispatch();\n\n  const getArrWithDateAndId = (firstElement: HTMLElement, secondElement: HTMLElement) => {\n    const newsOne = {\n      id: firstElement.dataset.id,\n      date: Number(firstElement.dataset.date),\n    };\n\n    const newsTwo = {\n      id: secondElement.dataset.id,\n      date: Number(secondElement.dataset.date),\n    };\n\n    return [ newsOne, newsTwo ];\n  };\n\n  const removeHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    const parentClass: string = NewsStyled.styledComponentId;\n    const element = (event.target as HTMLElement);\n    const parent = element.closest(`.${ parentClass }`) as HTMLElement;\n    const id = parent.dataset.id;\n    dispatch(removeNewsHandler(id));\n  };\n\n  const moveLefter = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    const parentClass: string = NewsStyled.styledComponentId;\n    const element = (event.target as HTMLElement);\n    const elementOne = element.closest(`.${ parentClass }`) as HTMLElement;\n    const elementTwo = elementOne.previousElementSibling as HTMLElement;\n\n    dispatch(changeDate(getArrWithDateAndId(elementOne, elementTwo)));\n  };\n\n  const moveRighter = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    const parentClass: string = NewsStyled.styledComponentId;\n    const element = (event.target as HTMLElement);\n    const elementOne = element.closest(`.${ parentClass }`) as HTMLElement;\n    const elementTwo = elementOne.nextElementSibling as HTMLElement;\n\n    dispatch(changeDate(getArrWithDateAndId(elementOne, elementTwo)));\n  };\n\n  return (\n    <NewsStyled data-id={ id } data-date={ date }>\n      <ControlButton onClick={ removeHandler } top=\"0\" right=\"0\" disabled={ !isAuth }>X</ControlButton>\n      { !isLeft &&\n      <ControlButton onClick={ moveLefter } top=\"50px\" left=\"0\" disabled={ !isAuth }>{ '<' }</ControlButton> }\n      { !isRight &&\n      <ControlButton onClick={ moveRighter } top=\"50px\" right=\"0\" disabled={ !isAuth }>{ '>' }</ControlButton> }\n      <Link target=\"_blank\" href={ link }>\n        <NewsImage src={ img } alt={ title } />\n        <NewsTitle>{ title }</NewsTitle>\n      </Link>\n    </NewsStyled>\n  );\n});","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst LoaderItem = styled.div`\n  width: 80px;\n  height: 80px;\n  animation: ${ spin } 1s linear infinite;\n  border: 4px solid #18191a;\n  border-bottom-color: #ccc;\n  border-top-color: #402f60;\n  border-left-color: #39aebc;\n  border-radius: 50%;\n`;\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <LoaderItem />\n    </LoaderWrapper>\n  );\n};","import React from \"react\";\nimport styled from \"styled-components\";\nimport { withAuth } from \"../../firebase/withAuth\";\n\ninterface IProps {\n  text: string\n}\n\nconst TitleStyled = styled.h2`\n  font-size: 32px;\n  text-align: center;\n`;\n\nconst Info = styled.h2`\n  font-size: 14px;\n  text-align: center;\n  font-weight: 400;\n  margin: 0 0 40px;\n  color: #ccc;\n`;\n\nexport const Title = withAuth(({ text, isAuth }: IProps & { isAuth: boolean }) => {\n  return (\n    <>\n      <TitleStyled>{ text }</TitleStyled>\n      { !isAuth && <Info>!Авторизируйтесь что бы изменять/добовлять новости</Info> }\n    </>\n  );\n});","import React, { useEffect, memo } from \"react\";\nimport styled from 'styled-components';\nimport { fetchNewsList, selectNewsList, selectPending, sleetErrorMessage } from \"./newsSlice\";\nimport { useSelector } from \"react-redux\";\nimport { News } from \"./News/News\";\nimport { Loader } from \"../../components/Loader/Loader\";\nimport { Title } from \"../../components/Title/Title\";\n\nconst List = styled.ul`\n  padding: 0 32px;\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 150px);\n  grid-gap: 8px;\n  justify-content: center;\n`;\n\nexport const NewsList = memo(() => {\n  const newList = useSelector(selectNewsList);\n  const pending = useSelector(selectPending);\n  const error = useSelector(sleetErrorMessage);\n\n  if (pending) {\n    return (\n      <>\n        <Title text=\"Список новостей\" />\n        <Loader />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Title text=\"Список новостей\" />\n      { pending && <Loader /> }\n      { error && <p>{ error }</p> }\n      <List>\n        { newList.map((news, index, arr) => {\n          let isRight = false;\n          let isLeft = false;\n\n          if (index === 0) {\n            isLeft = true;\n          }\n\n          if (index === arr.length - 1) {\n            isRight = true;\n          }\n\n          return <News isRight={ isRight } isLeft={ isLeft } key={ news.id } { ...news } />;\n        }) }\n      </List>\n    </>\n  );\n});\n\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n  isValidate: boolean;\n  pending: boolean;\n}\n\nconst AddButton = styled.button`\n  border: none;\n  outline: none;\n  color: #fff;\n  padding: 16px 16px;\n  width: 100%;\n  box-sizing: border-box;\n  font-size: 20px;\n  font-weight: bold;\n  border-radius: 16px;\n  cursor: pointer;\n  background-color: #39aebc;\n\n  :disabled {\n    background-color: #402f60;\n    color: #565061;\n    cursor: auto;\n  }\n`;\n\nexport const Button = ({ isValidate, pending }: IProps) => {\n  return (\n    <AddButton disabled={ !isValidate } type=\"submit\">{\n      pending ? 'Загрузка...' : 'Загрузить' }\n    </AddButton>\n  );\n};","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n  onChange(event: React.ChangeEvent<HTMLInputElement>): void\n  value: string\n}\n\nconst InputStyled = styled.input`\n  box-sizing: border-box;\n  width: 100%;\n  border: 4px solid #18191a;\n  border-radius: 16px;\n  outline: none;\n  margin: 0 0 16px;\n  font-size: 20px;\n  font-weight: 500;\n  padding: 8px;\n  transition: border .4s;\n\n  ::placeholder {\n    margin: 0;\n    color: #565061;\n  }\n\n  :focus {\n    border: 4px solid #ae86ee;\n  }\n\n  &:not(:placeholder-shown) {\n    :valid {\n      border: 4px solid #39aebc;\n    }\n\n    :invalid {\n      border: 4px solid #d6676f;\n    }\n  }\n`;\n\nconst Input = ({ onChange, value }: IProps) => {\n  return (\n    <InputStyled\n      onChange={ onChange }\n      value={ value }\n      name=\"link\"\n      placeholder=\"Введите ссылку на новость...\"\n      pattern=\"http(s?):\\/\\/.{2,}\\..{2,}\"\n      required\n    />\n  );\n};\n\nexport { Input };","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n  isPending: boolean;\n  image: string\n  onChange(event: React.ChangeEvent<HTMLInputElement>): void\n}\n\nconst Text = styled.p`\n  margin: 0;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nconst HiddenInput = styled.input`\n  position: absolute;\n  clip: rect(0, 0, 0, 0);\n  top: 0;\n  left: 0;\n`;\n\nconst Label = styled.label<Pick<IProps, 'image'>>`\n  box-sizing: border-box;\n  width: 100%;\n  position: relative;\n  cursor: pointer;\n  border: 4px solid ${ ({ image }) => image ? '#39aebc' : '#000' };\n  padding: 6px 15px;\n  border-radius: 16px;\n  margin: 0 0 16px;\n  transition: border .4s;\n\n  :hover {\n    border: 4px solid #ae86ee;\n  }\n`;\n\nexport const InputFile = ({ onChange, image, isPending }: IProps) => {\n  return (\n    <Label htmlFor=\"imageFileInput\" image={ image }>\n      <HiddenInput type=\"file\" onChange={ onChange } name=\"imageFileInput\" id=\"imageFileInput\" />\n      { image ?\n        <Text>Картинка загружена</Text> :\n        isPending ? <Text>Загрузка картинки...</Text> : <Text>Выбрать картинку</Text> }\n    </Label>\n  );\n};","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n  onChange(event: React.ChangeEvent<HTMLTextAreaElement>): void\n  value: string\n}\n\nconst TextAreaStyled = styled.textarea`\n  box-sizing: border-box;\n  width: 100%;\n  min-height: 100px;\n  border: 4px solid #18191a;\n  border-radius: 16px;\n  outline: none;\n  margin: 0 0 16px;\n  font-size: 20px;\n  font-weight: 500;\n  padding: 8px;\n  transition: border .4s;\n\n  ::placeholder {\n    margin: 0;\n    color: #565061;\n  }\n\n  :focus {\n    border: 4px solid #ae86ee;\n  }\n\n  :valid {\n    border: 4px solid #39aebc;\n  }\n`;\n\nconst TextArea = ({ onChange, value }: IProps) => {\n  return (\n    <TextAreaStyled\n      onChange={ onChange }\n      value={ value }\n      name=\"title\"\n      placeholder=\"Введите заголовок новости...\"\n      minLength={ 10 }\n      required\n    />\n  );\n};\n\nexport { TextArea };","import React, { PropsWithChildren } from \"react\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n  onChange(event: React.ChangeEvent<HTMLFormElement>): void\n  onSubmit(event: React.ChangeEvent<HTMLFormElement>): void;\n}\n\nconst FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-sizing: border-box;\n  max-width: 290px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nconst Form = ({ onSubmit, children, onChange }: PropsWithChildren<IProps>) => {\n  return (\n    <FormStyled onSubmit={ onSubmit } onChange={ onChange } noValidate>\n      { children }\n    </FormStyled>\n  );\n};\n\nexport { Form };","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n  text: string;\n  isError: boolean;\n}\n\nexport const StatusMessageStyled = styled.p<Pick<IProps, 'isError'>>`\n  font-size: 14px;\n  color: ${ ({ isError }) => isError ? '#d6676f' : '#8bb16f' };\n  text-align: center;\n  margin: 8px 0;\n`;\n\nexport const StatusMessage = ({ text, isError }: IProps) => {\n  return (\n    <StatusMessageStyled isError={ isError }>{ text }</StatusMessageStyled>\n  );\n};","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectFormErrorStatus,\n  selectImageLink,\n  selectPendingForm,\n  selectStatusText,\n  selectLoadImagePending,\n} from \"../../form/formSlice\";\n\nconst useAddForm = () => {\n  const [ isValidate, setValidate ] = useState(false);\n  const [ values, setValues ] = useState({ title: '', link: '' });\n\n  const dispatch = useDispatch();\n  const imageLink = useSelector(selectImageLink);\n  const statusMessage = useSelector(selectStatusText);\n  const isError = useSelector(selectFormErrorStatus);\n  const pending = useSelector(selectPendingForm);\n  const pendingImage = useSelector(selectLoadImagePending);\n\n  return {\n    isValidate, setValidate, values, setValues, dispatch, imageLink, statusMessage, isError, pending, pendingImage,\n  };\n};\n\nexport default useAddForm;","import React from \"react\";\nimport { loadImageToServe, loadNewsToServer } from \"../newsSlice\";\nimport { clearStatusMessage } from '../../form/formSlice';\nimport { Form, InputFile, TextArea, Input, Button, StatusMessage } from \"../../form/\";\nimport useAddForm from './useAddForm';\nimport { Title } from \"../../../components/Title/Title\";\nimport { withAuth } from \"../../../firebase/withAuth\";\n\n\nexport const AddNews = withAuth(({ isAuth }) => {\n  const {\n    isValidate,\n    setValidate,\n    values,\n    setValues,\n    dispatch,\n    imageLink,\n    statusMessage,\n    isError,\n    pending,\n    pendingImage,\n  } = useAddForm();\n\n  const validateForm = ({ currentTarget }: React.ChangeEvent<HTMLFormElement>) => {\n    if (statusMessage) {\n      dispatch(clearStatusMessage());\n    }\n\n    if (currentTarget.checkValidity() && imageLink) {\n      setValidate(true);\n      return;\n    }\n\n    setValidate(false);\n  };\n\n  const fileChangeHandler = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    try {\n      const file = event.target.files[0];\n      await dispatch(loadImageToServe(file));\n      if (values.link && values.title) {\n        setValidate(true);\n      }\n    } catch {\n      console.error('Ошибка загрузки:(');\n    }\n  };\n\n  const changeValuesHandler = ({ target }: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const submitHandler = async (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const { title, link } = values;\n    const date = Date.now();\n\n    await dispatch(loadNewsToServer({\n      title,\n      link,\n      date,\n      img: imageLink,\n    }));\n\n    await setValues({ title: '', link: '' });\n    setValidate(false);\n    event.target.reset();\n  };\n\n  return (\n    <>\n      <Title text=\"Добавить новость\" />\n      <Form onChange={ validateForm } onSubmit={ submitHandler }>\n        <InputFile onChange={ fileChangeHandler } image={ imageLink } isPending={ pendingImage } />\n        <Input\n          onChange={ changeValuesHandler }\n          value={ values.link }\n        />\n        <TextArea\n          onChange={ changeValuesHandler }\n          value={ values.title }\n        />\n        <StatusMessage isError={ isError } text={ statusMessage } />\n        <Button isValidate={ isValidate && isAuth } pending={ pending } />\n      </Form>\n    </>\n  );\n});","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginUser, selectIsAuth, selectPendingAuth } from \"../../../features/auth/authSlice\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst load = keyframes`\n  from {\n    max-width: 0;\n    background-color: #ae86ee;\n  }\n\n  to {\n    max-width: 500px;\n    background-color: #39aebc;\n  }\n`;\n\nconst LoadingStyled = styled.div`\n  height: 21px;\n  width: 423px;\n  background-color: transparent;\n  border-radius: 20px;\n  position: relative;\n  border: 4px solid #000;\n  overflow: hidden;\n\n  :after {\n    position: absolute;\n    content: '';\n    left: 0;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n    animation: ${ load } 2s linear;\n    background-color: #39aebc;\n  }\n`;\n\nconst Input = styled.input`\n  box-sizing: border-box;\n  border: 2px solid #18191a;\n  border-radius: 16px;\n  outline: none;\n  margin: 0 8px 16px;\n  font-weight: 500;\n  padding: 8px;\n\n  ::placeholder {\n    margin: 0;\n    color: #565061;\n  }\n\n  :focus {\n    border: 2px solid #ae86ee;\n  }\n\n  &:not(:placeholder-shown) {\n    :valid {\n      border: 2px solid #39aebc;\n    }\n\n    :invalid:required {\n      border: 2px solid #d6676f;\n    }\n  }\n`;\n\nconst Button = styled.button`\n  cursor: pointer;\n  border: none;\n  color: #fff;\n  background-color: #ae86ee;\n  padding: 10px 16px;\n  border-radius: 16px;\n  font-weight: bold;\n`;\n\nexport const AuthForm = () => {\n  const [ values, setValues ] = useState({ email: '', password: '' });\n  const pending = useSelector(selectPendingAuth);\n  const dispatch = useDispatch();\n\n  const changeValuesHandler = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const submitHandler = () => {\n    dispatch(loginUser(values));\n  };\n\n  if (pending) {\n    return (\n      <LoadingStyled />\n    );\n  }\n\n  return (\n    <form onSubmit={ submitHandler }>\n      <Input\n        name=\"email\"\n        value={ values.email }\n        onChange={ changeValuesHandler }\n        placeholder=\"email...\"\n        type=\"text\"\n        pattern=\".{1,}@.{1,}\\..{1,}\"\n        required\n      />\n      <Input\n        name=\"password\"\n        value={ values.password }\n        onChange={ changeValuesHandler }\n        placeholder=\"password...\"\n        type=\"password\"\n        minLength={ 6 }\n        required\n      />\n      <Button type=\"submit\">Войти</Button>\n    </form>\n  );\n};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { AuthForm } from \"./AuthForm/AuthForm\";\nimport { toggleForm, selectFormVisible, logoutUser } from \"../../features/auth/authSlice\";\nimport { withAuth } from \"../../firebase/withAuth\";\n\nconst HeaderStyled = styled.header`\n  padding: 40px 32px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: #000;\n  font-size: 20px;\n  position: relative;\n  padding-bottom: 10px;\n  margin-right: 16px;\n\n  :after {\n    position: absolute;\n    content: '';\n    bottom: 0;\n    left: 0;\n    border-bottom: 2px solid #000;\n    width: 100%;\n    max-width: 0;\n    transition: max-width .4s;\n  }\n\n  :hover {\n    :after {\n      max-width: 100%;\n    }\n  }\n\n  &.active {\n    color: #ae86ee;\n    cursor: default;\n\n    :after {\n      position: absolute;\n      content: '';\n      bottom: 0;\n      left: 0;\n      max-width: 100%;\n      width: 100%;\n      border-bottom: 2px solid #ae86ee;\n    }\n  }\n`;\n\nconst StyledLinkBlank = styled.a`\n  text-decoration: none;\n  color: #000;\n  font-size: 20px;\n  position: relative;\n  padding-bottom: 10px;\n  margin-right: 16px;\n\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst AuthButton = styled.button`\n  width: 140px;\n  padding: 8px;\n  color: #fff;\n  background-color: #ae86ee;\n  border: none;\n  border-radius: 8px;\n  font-size: 18px;\n  font-weight: bold;\n  transition: opacity .4s;\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: .4;\n  }\n`;\n\nconst NavigateBar = styled.nav`\n  margin-bottom: 16px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Header = withAuth(({ isAuth }) => {\n  const formIsVisible = useSelector(selectFormVisible);\n  const dispatch = useDispatch();\n\n  return (\n    <HeaderStyled>\n      <NavigateBar>\n        <StyledLink to='/list'>Управялть новостями</StyledLink>\n        <StyledLink to='/add'>Добавить новость</StyledLink>\n        <StyledLinkBlank href=\"http://xn--b1adccgnpd5cn4a0j.xn--p1ai/\" rel=\"noreferrer\" target=\"_blank\">Перейти на сайт\n          акции</StyledLinkBlank>\n        { !isAuth && <AuthButton onClick={ () => dispatch(toggleForm()) }>Авторизация</AuthButton> }\n        { isAuth && <AuthButton onClick={ () => dispatch(logoutUser()) }>Выйти</AuthButton> }\n      </NavigateBar>\n      { formIsVisible && <AuthForm /> }\n    </HeaderStyled>\n  );\n});","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst NotFoundStyled = styled.p`\n  font-size: 60px;\n  text-align: center;\n  font-weight: bold;\n`;\n\nexport const NotFound = () => {\n  return (\n    <NotFoundStyled>Not found 404 :(</NotFoundStyled>\n  );\n};","import React, { useEffect } from 'react';\r\nimport { NewsList } from \"../../features/news/NewsList\";\r\nimport { AddNews } from \"../../features/news/AddNews/AddNews\";\r\nimport { Header } from \"../Header/Header\";\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { NotFound } from '../NotFound/NotFound';\r\nimport { fetchNewsList } from \"../../features/news/newsSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchNewsList());\r\n  }, [ dispatch ]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Switch>\r\n        <Route path='/add' component={ AddNews } />\r\n        <Route path='/list' component={ NewsList } />\r\n        <Route component={ NotFound } />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport news from \"../features/news/newsSlice\";\r\nimport form from '../features/form/formSlice';\r\nimport auth from '../features/auth/authSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    news,\r\n    form,\r\n    auth,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={ store }>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}